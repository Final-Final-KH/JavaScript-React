{"ast":null,"code":"var _jsxFileName = \"/Users/WTK/final-dvel/src/App.js\";\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"./styles/Layout\";\nimport TopBar from \"./component/TopBar\";\nimport SideBar from \"./component/SideBar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  /*    const [darkMode, setDarkMode] = useState(false);\n  \n      useEffect(() => {\n      const isDarkMode = document.documentElement.classList.contains(\"dark\");\n      setDarkMode(isDarkMode);\n      }, []);*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        setDarkMode: setDarkMode,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","GlobalStyle","React","useEffect","useState","Layout","TopBar","SideBar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","darkMode","fileName","_jsxFileName","lineNumber","columnNumber","setDarkMode","_c","$RefreshReg$"],"sources":["/Users/WTK/final-dvel/src/App.js"],"sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"./styles/Layout\";\nimport TopBar from \"./component/TopBar\";\nimport SideBar from \"./component/SideBar\";\n\nfunction App() {\n/*    const [darkMode, setDarkMode] = useState(false);\n\n    useEffect(() => {\n    const isDarkMode = document.documentElement.classList.contains(\"dark\");\n    setDarkMode(isDarkMode);\n    }, []);*/\n    \n\n  return (\n      <>\n        <GlobalStyle darkMode={darkMode} />\n        <Router>\n            <TopBar setDarkMode={setDarkMode} darkMode={darkMode}/>\n            <SideBar/>\n            <Routes>\n                {/*<Route path=\"/\" element={<Layout/>}/>*/}\n            </Routes>\n        </Router>\n      </>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,OAAO,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EACf;AACA;AACA;AACA;AACA;AACA;;EAGE,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA,CAACR,WAAW;MAACa,QAAQ,EAAEA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCT,OAAA,CAACX,MAAM;MAAAe,QAAA,gBACHJ,OAAA,CAACH,MAAM;QAACa,WAAW,EAAEA,WAAY;QAACL,QAAQ,EAAEA;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvDT,OAAA,CAACF,OAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACVT,OAAA,CAACV,MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACT,CAAC;AAET;AAACE,EAAA,GArBQR,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}